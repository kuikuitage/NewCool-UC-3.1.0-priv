//Please follow these rules to modify hardware info:
//1. start commments with "//" in a new line, do not append comments at the end
//2. panel hw info begins with string of panel starts
//3. panel hw info is 28 bytes in total
//4. led bitmap starts with string of led starts
//5. led bitmap format is as "char, code, char, code, char, code...", 
//6. code is in hex and "," is a MUST after each data
//7. currently you can input 100 pairs of char and codes in maximum
//8. all data block ends with mark of ##, please don't delete them
//9. "-----------" is meaningless, just to separate the block, clear to see

---------------------------------------------------------------------------------------
//struct pan_gpio_info		    /* Total 1 byte */
//{
//  u8 polar:1; /* Polarity of GPIO, GPIO_LEVEL_LOW or GPIO_LEVEL_HIGH active(light) */
//  u8 io   :1; /* GPIO direction: GPIO_DIR_OUTPUT or GPIO_DIR_INPUT */
//  u8 pos  :6; /* GPIO index, upto 64 GPIO */
//};

//struct pan_hw_info			/* Total 28 bytes */
//{
//  /* offset 0 */
//  u8  type_scan:4;   /* refer to "enum pan_scan_type" */
//  u8  type_lbd :1;   /* 0: Stand-alone LBD, 1: LBD in shifter.*/ 
//  u8  type_com: 1;   /* 0: Stand-alone COM, 1: COM in shifter. */
//  u8  num_scan: 2;   /* Number of scan PIN, 0: no scan; <= 2 */

//  /* offset 1 */
//  u8  num_com : 4;   /* Number of COM PIN, 0: no com; <= 8 */
//  u8  pos_colon:4;   /* Position of colon flag, 0 to 7, 8 no colon */

//  /* offset 2 */
//  u8  status;        /* just for align structure, Reserved byte for future use*/

//  /* offset 3 */
//  struct pan_gpio_info	flatch;   /* Shifter latch PIN */
//  struct pan_gpio_info	fclock;   /* Shifter clock PIN */
//  struct pan_gpio_info	fdata;    /* Shifter data PIN */
//  struct pan_gpio_info	scan[2];  /* Panel scan PIN */

//  /* offset 8 */
//  struct pan_gpio_info	com[8];   /* COM PIN*/
//  struct pan_gpio_info	lbd[4];   /* LBD GPIO PIN, IN sequence: power,lock ...*/

//  /* offset 20 */
//  u32 com_scan_intv;              /* scan com digital interval in ms, */
//  u32 repeat_intv;                /* Repeat interval in ms, for rpt key only */
//};

---------------------------------------------------------------------------------------
panel starts
0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0a,0x0b,0x0c,0x0d,
0x0e,0x0f,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,  ## //data ends mark
-------------------------------------------------------
led starts
  {'0', 0xC0},  {'1', 0xF9},  {'2', 0xA4},  {'3', 0xB0},
  {'4', 0x99},  {'5', 0x92},  {'6', 0x82},  {'7', 0xF8},
  {'8', 0x80},  {'9', 0x90},  {'a', 0x88},  {'A', 0x88},
  {'b', 0x83},  {'B', 0x83},  {'c', 0xC6},  {'C', 0xC6},
  {'d', 0xA1},  {'D', 0xA1},  {'e', 0x86},  {'E', 0x86},
  {'f', 0x8E},  {'F', 0x8E},  {'g', 0x90},  {'G', 0xC2},
  {'h', 0x89},  {'H', 0x89},  {'i', 0xFB},  {'I', 0xCF},
  {'j', 0xF1},  {'J', 0xF1},  {'l', 0xC7},  {'L', 0xC7},
  {'n', 0xAB},  {'N', 0xC8},  {'o', 0xA3},  {'O', 0xC0},
  {'p', 0x8C},  {'P', 0x8C},  {'q', 0x98},  {'Q', 0x98},
  {'r', 0xAF},  {'R', 0x88},  {'s', 0x92},  {'S', 0x92},
  {'t', 0x87},  {'T', 0xCE},  {'u', 0xC1},  {'U', 0xC1},
  {'y', 0x91},  {'Y', 0x91},  {'z', 0xA4},  {'Z', 0xA4},
  {':', 0x7F},  {'-', 0xBF},  {'_', 0xF7},  {' ', 0xFF},
  {'.', 0x7F}, ## //data ends mark
--------------------------------------------------------
